📁 Amazon Affiliate Telegram Bot - Complete File Structure
═══════════════════════════════════════════════════════════

affilate bot/
│
├── 📄 package.json                      # Project dependencies and scripts
├── 📄 .env.example                      # Environment variables template
├── 📄 .env                              # Your actual credentials (CREATE THIS)
├── 📄 .gitignore                        # Git ignore rules
│
├── 📚 DOCUMENTATION FILES
│   ├── 📄 README.md                     # Main documentation (START HERE)
│   ├── 📄 SETUP_GUIDE.md                # Step-by-step setup instructions
│   ├── 📄 QUICK_REFERENCE.md            # Common commands and tips
│   ├── 📄 ARCHITECTURE.md               # System design and architecture
│   ├── 📄 INSTALLATION_CHECKLIST.md     # Setup checklist
│   ├── 📄 PROJECT_SUMMARY.md            # Project overview
│   └── 📄 FILE_STRUCTURE.txt            # This file
│
├── 📄 supabase-setup.sql                # Database setup script
│
└── 📁 src/                              # Source code directory
    │
    ├── 📄 index.js                      # Main entry point (START HERE)
    │   ├── Loads environment variables
    │   ├── Validates configuration
    │   ├── Initializes all modules
    │   ├── Starts Express server
    │   └── Handles graceful shutdown
    │
    ├── 📄 scheduler.js                  # Cron job scheduler
    │   ├── Manages scheduled tasks
    │   ├── Orchestrates deal-finding process
    │   ├── Coordinates between modules
    │   └── Handles cleanup operations
    │
    ├── 📁 modules/                      # Core functionality modules
    │   │
    │   ├── 📄 amazonAPI.js              # Amazon PA-API integration
    │   │   ├── AWS Signature V4 generation
    │   │   ├── Product search functionality
    │   │   ├── Discount filtering
    │   │   ├── Availability checking
    │   │   └── Affiliate link generation
    │   │
    │   ├── 📄 telegramBot.js            # Telegram Bot integration
    │   │   ├── Bot initialization
    │   │   ├── Message formatting
    │   │   ├── Image posting
    │   │   ├── Rate limit handling
    │   │   └── Notification sending
    │   │
    │   └── 📄 database.js               # Supabase database operations
    │       ├── Database initialization
    │       ├── Duplicate checking
    │       ├── Deal tracking
    │       ├── Statistics retrieval
    │       └── Cleanup operations
    │
    └── 📁 utils/                        # Utility functions
        │
        ├── 📄 logger.js                 # Logging utility
        │   ├── Info logging (ℹ️)
        │   ├── Success logging (✅)
        │   ├── Error logging (❌)
        │   ├── Warning logging (⚠️)
        │   └── Debug logging (🐛)
        │
        └── 📄 helpers.js                # Helper functions
            ├── Discount calculation
            ├── Price formatting
            ├── Retry logic
            ├── Environment validation
            └── Text sanitization


═══════════════════════════════════════════════════════════
📊 FILE STATISTICS
═══════════════════════════════════════════════════════════

Total Files:           15+
Source Code Files:     7 (.js files)
Documentation Files:   7 (.md files)
Configuration Files:   3 (.json, .env, .gitignore)
Database Files:        1 (.sql)

Total Lines of Code:   ~2,000+
Total Documentation:   ~3,000+ lines


═══════════════════════════════════════════════════════════
📝 FILE DESCRIPTIONS
═══════════════════════════════════════════════════════════

ROOT LEVEL FILES
────────────────

package.json
  • Project metadata and dependencies
  • NPM scripts (start, dev, test)
  • Version information
  • License details

.env.example
  • Template for environment variables
  • Shows required configuration
  • Safe to commit to Git
  • Copy to .env and fill in

.env (YOU CREATE THIS)
  • Your actual credentials
  • NEVER commit to Git
  • Contains sensitive API keys
  • Required for bot to run

.gitignore
  • Files to exclude from Git
  • Includes .env, node_modules
  • Prevents credential leaks
  • Standard Node.js ignores

supabase-setup.sql
  • Database table creation script
  • Run in Supabase SQL Editor
  • Creates posted_deals table
  • Sets up indexes and policies


DOCUMENTATION FILES
───────────────────

README.md (START HERE)
  • Main project documentation
  • Features and overview
  • Quick start guide
  • Configuration options
  • Troubleshooting tips

SETUP_GUIDE.md
  • Detailed step-by-step setup
  • Amazon account setup
  • Telegram bot creation
  • Supabase configuration
  • Testing procedures

QUICK_REFERENCE.md
  • Common commands
  • Configuration quick edits
  • Database queries
  • Debugging tips
  • Pro tips and tricks

ARCHITECTURE.md
  • System design overview
  • Data flow diagrams
  • Module breakdown
  • Security architecture
  • Performance details

INSTALLATION_CHECKLIST.md
  • Step-by-step checklist
  • Verification steps
  • Success criteria
  • Troubleshooting guide
  • Final verification

PROJECT_SUMMARY.md
  • High-level overview
  • Key features
  • Technology stack
  • Performance metrics
  • Future enhancements

FILE_STRUCTURE.txt (THIS FILE)
  • Complete file tree
  • File descriptions
  • Directory structure
  • Quick navigation guide


SOURCE CODE FILES
─────────────────

src/index.js (MAIN ENTRY POINT)
  • Application bootstrap
  • Module initialization
  • Express server setup
  • Error handling
  • Graceful shutdown
  Lines: ~200

src/scheduler.js
  • Cron job management
  • Job orchestration
  • Retry logic
  • Cleanup tasks
  Lines: ~150

src/modules/amazonAPI.js
  • Amazon PA-API client
  • AWS authentication
  • Product search
  • Filtering logic
  Lines: ~250

src/modules/telegramBot.js
  • Telegram Bot client
  • Message formatting
  • Image posting
  • Rate limiting
  Lines: ~180

src/modules/database.js
  • Supabase client
  • CRUD operations
  • Duplicate checking
  • Statistics
  Lines: ~200

src/utils/logger.js
  • Logging utility
  • Multiple log levels
  • Timestamp formatting
  • Color coding
  Lines: ~70

src/utils/helpers.js
  • Utility functions
  • Price formatting
  • Discount calculation
  • Validation
  Lines: ~100


═══════════════════════════════════════════════════════════
🗂️ DIRECTORY STRUCTURE EXPLAINED
═══════════════════════════════════════════════════════════

src/
  Main source code directory
  Contains all application logic

src/modules/
  Core business logic modules
  Each module handles one integration
  Highly modular and reusable

src/utils/
  Shared utility functions
  Helper functions used across modules
  No business logic, just utilities


═══════════════════════════════════════════════════════════
📖 READING ORDER (FOR NEW USERS)
═══════════════════════════════════════════════════════════

1. README.md                    # Understand what the bot does
2. SETUP_GUIDE.md               # Follow setup instructions
3. INSTALLATION_CHECKLIST.md    # Check off each step
4. .env.example                 # See what credentials you need
5. supabase-setup.sql           # Run database setup
6. QUICK_REFERENCE.md           # Learn common commands
7. src/index.js                 # Understand entry point
8. ARCHITECTURE.md              # Deep dive into design
9. PROJECT_SUMMARY.md           # Full project overview


═══════════════════════════════════════════════════════════
🔧 MODIFICATION GUIDE
═══════════════════════════════════════════════════════════

To modify search keywords:
  → Edit: src/scheduler.js (line ~25)

To change message format:
  → Edit: src/modules/telegramBot.js (formatDealMessage function)

To adjust filtering logic:
  → Edit: src/modules/amazonAPI.js (filterHighDiscountProducts function)

To modify schedule:
  → Edit: .env (CRON_SCHEDULE variable)

To change minimum discount:
  → Edit: .env (MIN_DISCOUNT_PERCENTAGE variable)


═══════════════════════════════════════════════════════════
🚀 DEPLOYMENT FILES
═══════════════════════════════════════════════════════════

For PM2 (Process Manager):
  • No additional files needed
  • Use: pm2 start src/index.js --name amazon-bot

For Heroku:
  • Create: Procfile
  • Content: web: node src/index.js

For Docker (future):
  • Create: Dockerfile
  • Create: docker-compose.yml


═══════════════════════════════════════════════════════════
📦 GENERATED FILES (AFTER npm install)
═══════════════════════════════════════════════════════════

node_modules/
  • All npm dependencies
  • Auto-generated
  • Don't commit to Git
  • ~50-100 MB

package-lock.json
  • Dependency lock file
  • Auto-generated
  • Commit to Git
  • Ensures consistent installs


═══════════════════════════════════════════════════════════
🔒 SENSITIVE FILES (NEVER COMMIT)
═══════════════════════════════════════════════════════════

.env
  • Contains all credentials
  • Listed in .gitignore
  • Backup securely
  • Never share publicly


═══════════════════════════════════════════════════════════
✅ QUICK NAVIGATION
═══════════════════════════════════════════════════════════

Need to...                          Open this file...
─────────────────────────────────   ──────────────────────────
Understand the project              README.md
Set up from scratch                 SETUP_GUIDE.md
Find a command                      QUICK_REFERENCE.md
Understand architecture             ARCHITECTURE.md
Check setup progress                INSTALLATION_CHECKLIST.md
See project overview                PROJECT_SUMMARY.md
Navigate files                      FILE_STRUCTURE.txt (this)
Configure credentials               .env
Set up database                     supabase-setup.sql
Start the bot                       src/index.js
Change schedule                     src/scheduler.js
Modify Amazon logic                 src/modules/amazonAPI.js
Modify Telegram messages            src/modules/telegramBot.js
Modify database logic               src/modules/database.js
Add logging                         src/utils/logger.js
Add utilities                       src/utils/helpers.js


═══════════════════════════════════════════════════════════
🎯 NEXT STEPS
═══════════════════════════════════════════════════════════

1. Read README.md to understand the project
2. Follow SETUP_GUIDE.md for installation
3. Use INSTALLATION_CHECKLIST.md to track progress
4. Refer to QUICK_REFERENCE.md for daily operations
5. Explore source code to customize behavior


═══════════════════════════════════════════════════════════

End of File Structure Documentation
Generated: 2024
Version: 1.0.0

═══════════════════════════════════════════════════════════

